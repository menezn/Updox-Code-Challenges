package prime;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;

public class BlackBoxTesting {
	
	@Test
	public void timeTest() {
		WheelGenerator generator = new WheelGenerator();
		generator.generate(1, 1000000000);
	}

	@Test
	public void basicRangeTest() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(1, 10);
		List<Integer> testType = Arrays.asList(2,3,5,7);
		
		assert(testType.equals(returnType));
	}
	
	@Test
	public void inverseBasicRangeTest() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(10, 1);
		List<Integer> testType = Arrays.asList(2,3,5,7);
		
		assert(testType.equals(returnType));
	}
	
	@Test
	public void largeNumberTest() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(7900, 7920);
		List<Integer> testType = Arrays.asList(7901, 7907, 7919);
		
		assert(testType.equals(returnType));
	}

	@Test
	public void smallRangeTest() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(1, 200);
		List<Integer> testType = Arrays.asList(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199);
		
		assert(testType.equals(returnType));
	}
	
	@Test
	public void noRangeTest() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(1, 1);
		List<Integer> testType = Arrays.asList();
		
		assert(testType.equals(returnType));
	}
	
	@Test
	public void EdgePrimeTest_1() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(1, 2);
		List<Integer> testType = Arrays.asList(2);
		
		assert(testType.equals(returnType));
	}
	
	public void EdgePrimeTest_2() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(3, 4);
		List<Integer> testType = Arrays.asList(3);
		
		assert(testType.equals(returnType));
	}
	
	public void EdgePrimeTest_3() {
		WheelGenerator generator = new WheelGenerator();
		List<Integer> returnType = generator.generate(2, 3);
		List<Integer> testType = Arrays.asList(2,3);
		
		assert(testType.equals(returnType));
	}
}
